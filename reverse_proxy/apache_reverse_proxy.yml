---
- name: Set up Apache reverse proxy with Let's Encrypt SSL
  hosts: localhost
  become: yes
  connection: local
  vars:
    domain_name: "{{ domain_name }}"
    local_port: "{{ local_port }}"
    webroot_path: "/var/www/{{ domain_name }}"
    temp_config: "/etc/apache2/sites-available/{{ domain_name }}.conf"

  tasks:
    - name: Install Apache and Certbot
      apt:
        name:
          - apache2
          - python3-certbot-apache
          - certbot
        state: present
        update_cache: yes
        
    # 1. Add NodeSource Node.js 18.x repository
    - name: Add NodeSource Node.js 18.x repository
      shell: curl -sL https://deb.nodesource.com/setup_18.x | bash -

    - name: Enable required Apache modules
      command: a2enmod "{{ item }}"
      args:
        creates: "/etc/apache2/mods-enabled/{{ item }}.load"
      loop:
        - proxy
        - proxy_http
        - ssl
        - headers
        - rewrite

    - name: Disable default Apache site
      command: a2dissite 000-default.conf
      args:
        removes: "/etc/apache2/sites-enabled/000-default.conf"
      notify:
        - reload apache

    # 2. Install Node.js
    - name: Install Node.js
      apt:
        name: nodejs
        state: present
        update_cache: yes
        
    - name: Ensure webroot directory exists
      file:
        path: "{{ webroot_path }}"
        state: directory
        owner: www-data
        group: www-data
        mode: '0755'

    - name: Create temporary Apache virtual host configuration (HTTP only)
      template:
        src: temp_http.conf.j2
        dest: "{{ temp_config }}"
      notify:
        - reload apache

    # 3. Upgrade npm to latest version
    - name: Upgrade npm to latest version
      shell: npm install -g npm@latest
      
    - name: Enable Apache site
      command: a2ensite "{{ domain_name }}.conf"
      args:
        creates: "/etc/apache2/sites-enabled/{{ domain_name }}.conf"
      notify:
        - reload apache

    - name: Obtain Let's Encrypt SSL certificate
      command: >
        certbot certonly --webroot -w {{ webroot_path }} -n --agree-tos --email admin@{{ domain_name }} -d {{ domain_name }}
      args:
        creates: "/etc/letsencrypt/live/{{ domain_name }}/fullchain.pem"

    # 4. Install PM2 globally
    - name: Install PM2 globally
      shell: npm install pm2@latest -g
      
    - name: Create final Apache virtual host configuration (with SSL)
      template:
        src: reverse_proxy.conf.j2
        dest: "{{ temp_config }}"
      notify:
        - reload apache

  handlers:
    - name: reload apache
      service:
        name: apache2
        state: reloaded
